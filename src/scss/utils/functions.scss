// Pixels to rem conversion
@function rem($pixels, $context: $baseFontSize) {
    @if (unitless($pixels)) {
        $pixels: $pixels * 1px;
    }

    @if (unitless($context)) {
        $context: $context * 1px;
    }

    @return $pixels / $context * 1rem;
}

/**
 * A Long-shadow function
 * @param  string  $color_a  The darkest colour (closest the object)
 * @param  string  $color_b  The lightest colour (often the background colour)
 * @param  int     $stepnum  Number of steps
 * @param  int     $opacity  The opacity of the blend
 * @return list                Returns a list ready to drop into 'box-shadow' or text-shadow
 */
@function longshadow($color_a,$color_b,$stepnum, $opacity: 1){
    $gradient_steps: null;

    @for $i from 1 through $stepnum {

        $weight: ( ( $i - 1 ) / $stepnum ) * 100;
        $colour_mix: mix($color_b, rgba($color_a, $opacity), $weight);
        $seperator: null;

        @if($i != $stepnum){ 
            $seperator: #{','}; 
        }

        $gradient_steps: append( #{$gradient_steps}, #{$i}px #{$i}px $colour_mix $seperator );

    }

    @return $gradient_steps;
}
